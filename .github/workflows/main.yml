name: Publish Release to GitHub

on: push

env:
  PYTHON_VERSION: '3.10.4'

jobs:
  build-windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Package Application
        run: pip install pygame pyinstaller

      - name: Build
        run: pyinstaller --onefile --noconsole main.py -n Game

      - uses: actions/upload-artifact@v2
        with:
          name: Game
          path: ./dist/Game.exe

  build-mac:

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Package Application
        run: pip3 install -r pygame pyinstaller

      - name: Build
        run: pyinstaller --onefile --noconsole main.py -n Game

      - id: Zip
        run: cd dist && zip -r Game.zip Game.app

      - uses: actions/upload-artifact@v2
        with:
          name: Game
          path: ./dist/Game.zip

  upload:

    runs-on: ubuntu-latest
    needs: [ build-windows, build-mac]

    steps:
      - uses: actions/checkout@v2

      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          name: Game
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: PySender ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Windows Release Asset
        id: upload-release-asset-wn
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Game.exe
          asset_name: Game-Windows.exe
          asset_content_type: application/exe

      - name: Upload MacOS Release Asset
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Game.zip
          asset_name: Game-MacOS.zip
          asset_content_type: application/zip
